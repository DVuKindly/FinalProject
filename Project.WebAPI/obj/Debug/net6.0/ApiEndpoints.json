[
  {
    "ContainingType": "Project.WebAPI.Controllers.EventController",
    "Method": "CreateEvent",
    "RelativePath": "api/Event",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventViewModel",
        "Type": "Project.Business.Model.EventCreationViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.EventController",
    "Method": "GetAllEvents",
    "RelativePath": "api/Event",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.EventController",
    "Method": "UpdateEvent",
    "RelativePath": "api/Event/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "eventEntity",
        "Type": "Project.Business.Model.EventUpdateViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.EventController",
    "Method": "DeleteEvent",
    "RelativePath": "api/Event/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.EventController",
    "Method": "GetEventById",
    "RelativePath": "api/Event/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.EventController",
    "Method": "SearchEvents",
    "RelativePath": "api/Event/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.RoleController",
    "Method": "GetRoles",
    "RelativePath": "api/Role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.RoleController",
    "Method": "CreateRole",
    "RelativePath": "api/Role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Project.Business.Model.RoleViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.RoleController",
    "Method": "GetRole",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.RoleController",
    "Method": "UpdateRole",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "model",
        "Type": "Project.Business.Model.RoleViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.RoleController",
    "Method": "DeleteRole",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "ChangePassword",
    "RelativePath": "auth/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordViewModel",
        "Type": "Project.Business.Model.ChangePasswordViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "ConfirmEmail",
    "RelativePath": "auth/confirmemail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginViewModel",
        "Type": "Project.Business.Model.LoginViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerViewModel",
        "Type": "Project.Business.Model.RegisterViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Project.Business.Model.LoginResponseViewModel, Project.Business, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "auth/resetpass",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.AuthController",
    "Method": "ResetPasswordAfterForgot",
    "RelativePath": "auth/ResetPasswordAfterForgot",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetPasswordViewModel",
        "Type": "Project.Business.Model.ResetPasswordViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "CreateCandidate",
    "RelativePath": "Candidate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "candidate",
        "Type": "Project.Business.Model.CandidateCreateViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "GetCandidateById",
    "RelativePath": "Candidate/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "DeleteCandidate",
    "RelativePath": "Candidate/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "UpdateStatus",
    "RelativePath": "Candidate/{id}/status",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "UpdateCandidate",
    "RelativePath": "Candidate/{id}/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedCandidate",
        "Type": "Project.Business.Model.CandidateCreateViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "AdvancedSearchCandidates",
    "RelativePath": "Candidate/advancedSearch",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchModel",
        "Type": "Project.Business.Model.CandidateSearchModel",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "CancelImport",
    "RelativePath": "Candidate/cancelImport",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "previewId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "ConfirmImport",
    "RelativePath": "Candidate/confirmImport",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "previewId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "ExportToExcel",
    "RelativePath": "Candidate/export",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nameFile",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "GetCandidates",
    "RelativePath": "Candidate/GetAllCandidates",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.CandidateController",
    "Method": "ImportCandidatesPreview",
    "RelativePath": "Candidate/importExcelCandidatePreview",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "channel",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "ChangePassword",
    "RelativePath": "changePassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordViewModel",
        "Type": "Project.Business.Model.ChangePasswordViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "GetUsers",
    "RelativePath": "User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isActive",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Project.Business.Model.UserViewModel, Project.Business, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "CreateUser",
    "RelativePath": "User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userCreateViewModel",
        "Type": "Project.Business.Model.UserCreateViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "GetUser",
    "RelativePath": "User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Business.Model.UserViewModel",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "userEditViewModel",
        "Type": "Project.Business.Model.UserEditViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "DeleteUserRole",
    "RelativePath": "User/{userId}/roles/{roleName}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "roleName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "ExportToExcel",
    "RelativePath": "User/export",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nameFile",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "SetRole",
    "RelativePath": "User/SetRole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Project.Business.Model.SetRoleViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.UsersController",
    "Method": "UpdateIsActive",
    "RelativePath": "User/UpdateIsActive",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Project.Business.Model.UpdateIsActiveViewModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Project.WebAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.WebAPI.WeatherForecast, Project.WebAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]